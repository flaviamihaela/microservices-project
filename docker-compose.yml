version: '3'
services:
  ## MySQL Docker Compose Config
  mysql-fetch:
    container_name: mysql-fetch
    image: mysql
    command: --init-file /tmp/data/data.sql
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      - ./fetch-service/src/main/resources:/tmp/data
      - ./mysql-fetch:/var/lib/mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    restart: unless-stopped

  mysql-inventory:
    container_name: mysql-inventory
    image: mysql
    command: --init-file /tmp/data/data.sql
    environment:
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    volumes:
      - ./inventory-service/src/main/resources:/tmp/data
      - ./mysql-inventory:/var/lib/mysql
    ports:
      - "3307:3306"
    restart: unless-stopped
    
  mongo:
    container_name: mongo
    image: mongo:4.4.14-rc0-focal
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  discovery-server:
    image: flaviamihaela/discovery-server:latest
    container_name: discovery-server
    pull_policy: always
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: flaviamihaela/api-gateway:latest
    container_name: api-gateway
    pull_policy: always
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server

  project-service:
    container_name: project-service
    image: flaviamihaela/project-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - mongo
      - discovery-server
      - api-gateway

  fetch-service:
    container_name: fetch-service
    image: flaviamihaela/fetch-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-fetch:3306/fetch-service
    depends_on:
      - mysql-fetch
      - broker
      - zipkin
      - discovery-server
      - api-gateway

  inventory-service:
    container_name: inventory-service
    image: flaviamihaela/inventory-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-inventory:3306/inventory-service
    depends_on:
      - mysql-inventory
      - discovery-server
      - api-gateway

  notification-service:
    container_name: notification-service
    image: flaviamihaela/notification-service:latest
    pull_policy: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin
      - broker
      - discovery-server
      - api-gateway